# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2018-05-23 08:28
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('invite_user', models.CharField(max_length=50, null=True, verbose_name='推荐人')),
                ('integral', models.FloatField(blank=True, default=1000.0, verbose_name='点数')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Buydetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datat', models.DateTimeField(auto_now=True, verbose_name='购买时间')),
                ('buynum', models.IntegerField(default=0, verbose_name='购买数量')),
                ('buypay', models.IntegerField(default=0, verbose_name='购买价格')),
            ],
            options={
                'verbose_name': '购买记录',
                'verbose_name_plural': '购买记录',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Caritem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, verbose_name='数量')),
                ('sum_price', models.FloatField(default=0.0, verbose_name='小计')),
            ],
            options={
                'verbose_name': '购物车条目',
                'verbose_name_plural': '购物车条目',
            },
        ),
        migrations.CreateModel(
            name='Clothing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='名称')),
                ('size', models.CharField(default='大份', max_length=7, verbose_name='分量')),
                ('old_price', models.FloatField(default=0.0, verbose_name='原价')),
                ('price', models.FloatField(default=0.0, verbose_name='价格')),
                ('discount', models.FloatField(default=1, verbose_name='折扣')),
                ('sales', models.IntegerField(default=0, verbose_name='销量')),
                ('num', models.IntegerField(default=0, verbose_name='库存')),
                ('details', models.CharField(default='', max_length=100, verbose_name='详情')),
                ('image_url_i', models.ImageField(default='meishi/yangrouchuan.jpg', upload_to='meishi/%Y/%m', verbose_name='展示图片路径')),
                ('image_url_l', models.ImageField(default='meishi/yangrouchuan.jpg', upload_to='meishi/%Y/%m', verbose_name='详情图片路径1')),
                ('image_url_m', models.ImageField(default='meishi/yangrouchuan.jpg', upload_to='meishi/%Y/%m', verbose_name='详情图片路径2')),
                ('image_url_r', models.ImageField(default='meishi/yangrouchuan.jpg', upload_to='meishi/%Y/%m', verbose_name='详情图片路径3')),
                ('image_url_c', models.ImageField(default='meishi/yangrouchuan.jpg', upload_to='meishi/%Y/%m', verbose_name='购物车展示图片')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='caritem',
            name='clothing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Clothing', verbose_name='购物车中产品条目'),
        ),
        migrations.AddField(
            model_name='buydetails',
            name='clothing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Clothing', verbose_name='购买的商品'),
        ),
        migrations.AddField(
            model_name='buydetails',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='购买者'),
        ),
    ]
